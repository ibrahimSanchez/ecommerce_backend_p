// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id               String      @id @default(cuid()) // ID único del pedido
  delivery_address String
  userId           String // ID del usuario que realiza el pedido
  user             User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items            OrderItem[] // Relación con los productos del pedido
  total_amount     Decimal // Monto total del pedido
  status           String      @default("pending") // Estado del pedido
  createdAt        DateTime    @default(now()) // Fecha de creación
  updatedAt        DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid()) // ID único del detalle del pedido
  orderId   String // Relación con el pedido
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String // Relación con el producto
  product   Product @relation(fields: [productId], references: [id])
  quantity  Decimal @db.Decimal(10, 2) // Cantidad del producto en el pedido
  price     Decimal // Precio unitario en el momento de la compra
}

model Product {
  id              String  @id @default(cuid())
  title           String  @unique
  reviews         Decimal @db.Decimal(10, 2)
  price           Decimal @db.Decimal(10, 2)
  discountedPrice Decimal @db.Decimal(10, 2)
  quantity        Decimal @db.Decimal(10, 2)
  description     String  @default("")

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  imgs ProductImage[]

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  OrderItem OrderItem[]
}

model ProductImage {
  id         String   @id @default(cuid())
  productId  String
  thumbnails String[]
  previews   String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category {
  id       String    @id @default(cuid())
  title    String    @unique
  products Product[]
}

model User {
  id                   String  @id @default(cuid())
  email                String  @unique
  name                 String
  phone                String
  address              String
  password             String
  active               Boolean @default(false)
  activation_token     String  @unique @db.Uuid
  reset_password_token String? @unique @db.Uuid

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]

  role         String @default("user_role")
  relationRole Role   @relation(fields: [role], references: [role])
}

model Role {
  id   String @id @default(cuid())
  role String @unique @default("user_role")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User[]
}
